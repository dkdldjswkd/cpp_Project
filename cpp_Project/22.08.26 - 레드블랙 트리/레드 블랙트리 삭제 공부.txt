레드블렉 트리 회전
	회전을 위한 최소 작업
		회전할 반대방향의 자식과 부모의 색을 교체 후 회전시킴
		이유 1. 회전 후 부모의 색이 변하지 않는다. (부모의 색이 바뀌면 레드레드 문제가 생길 수 있음)
		이유 2. 회전 반대 방향의 자식의 자식이 이전 부모의 새로운 자식이 되는데,
		          색 교체로 인해서 새로운 자식 경로의 블랙개수가 회전 전/후 동일하다.

	해결 문제
		1. 회전 반대방향의 자식노드가 블랙이었다면, 회전 후 회전 반대방향의 블랙 개수가 한개 적어짐
		2. 두 자식이 레드라면 레드레드 연속의 문제를 갖는다.
	
	문제없이 회전할 수 있는경우
		회전 반대방향의 자식노드가 레드라면, -> 해결문제 1에 저촉되지 않음
		회전 방향의 자식이 블랙 이라면, -> 해결문제 2에 저촉되지 않음
		즉, [ 레드, 블랙노드를 자식으로 갖는다면 문제없이 블랙 방향으로 회전할 수 있음. ]

레드블랙트리 삭제
	*** 블랙노드 삭제 시만 문제가 발생한다. (블랙노드의 개수의 틀어짐)
	삭제 노드의 대체 노드가 레드라면, 검은색으로 칠해주면 문제 해결
	*** 대체 노드가 블랙일때 문제가 생김 -> 이미 블랙이기 때문에 이중 블랙 노드가 되어버림

(이중 블랙노드가 왼쪽이라고 가정하고 서술)
1. 이중 블랙노드의 형제가 레드일때
	1) 형제를 블랙, 부모를 레드로 칠하고 (형제와 부모의 색 교환) 이중 블랙노드의 방향으로 회전 한다.
		위에서 설명한 '문제없이 회전할 수 있는경우'에 속한다.
		
	2) 이중 블랙노드의 새로운 형제의 색은 블랙이 된다.
		* 이전 형제의 색이 레드였으므로 이전 형제의 자식들은 블랙이다. 때문에 새로운 형제의 색은 블랙이다.
		* 회전을 했으므로 이중 블랙노드의 depth가 하나 더 깊어졌다.

2. 이중 블랙노드의 형제가 블랙일때
	* 형제는 닐노드 일 수 없음
		이중 블랙노드의 형제이기 때문에 블랙 밸런스가 맞기 위해서는 닐노드일 수 없다.

	2-1. 형제의 양쪽 자식이 블랙의 경우
		1) 형제를 레드로 바꾸고 이중 블랙노드의 색을 하나 부모에게 넘긴다.
			1. 부모가 블랙일 경우 이중 블랙노드이므로 부모를 기준으로 밸런스 작업 진행
			* 부모가 레드, 혹은 부모가 루트노드인 경우 문제해결

	2-2. 형제의 왼자식은 레드, 오른자식은 블랙의 경우
		1) 형제의 왼자식을 블랙, 형제를 레드로 칠하고 (형제와 왼자식의 색 교환) 우회전
			형제의 오른자식이 레드가 됨. (2-3. 의 경우)

	2-3. 형제의 오른자식이 레드인 경우
		1) 형제와 부모의 색을 교체한 후 이중 블랙노드 방향으로 회전시킨다.
			1. 회전으로 인해 형제의 색 즉, 블랙을 하나 가져왔기때문에 이중 블랙노드의 문제가 해결된다.
			2. 하지만 이전 형제 쪽 블랙의 개수가 하나 적어진 문제가 있다.
	
		2) 부모의 오른자식(이전 형제의 오른자식)을 검은색으로 칠한다.
			1. 검은색으로 칠하며 이전 형제쪽의 블랙 개수 적어진 문제를 해결했다.
			* 문제 해결


