

콘솔창 X 비활성화

DeleteMenu(GetSystemMenu(GetConsoleWindow(), false), SC_CLOSE, MF_BYCOMMAND);


bool CProcessAgent::Run_GameServer(void)
{
	if ( _hGameServer_Process != INVALID_HANDLE_VALUE )
		return false;

	STARTUPINFO StartInfo;
	ZeroMemory(&StartInfo, sizeof(StartInfo));

	StartInfo.cb			= sizeof(StartInfo);
	StartInfo.dwFlags		= STARTF_USESHOWWINDOW | STARTF_USEFILLATTRIBUTE;
	StartInfo.dwFillAttribute	= FOREGROUND_GREEN | FOREGROUND_RED | BACKGROUND_BLUE;
	StartInfo.wShowWindow		= SW_MINIMIZE;

	PROCESS_INFORMATION ProcessInfo;

	//------------------------------------------------------------------
	// 프로세스 생성!
	//------------------------------------------------------------------
	if ( !CreateProcess(CServerConfig::GetGameServerEXE(), NULL, NULL, NULL, NULL, CREATE_NEW_CONSOLE, NULL, NULL, &StartInfo, &ProcessInfo) )
	{
		DWORD dwError = GetLastError();
		_GameServer_OnTime = 0;
		return false;
	}
	else
	{
		CloseHandle(ProcessInfo.hThread);

		_hGameServer_Process = ProcessInfo.hProcess;
		_dwGameServer_ProcID = ProcessInfo.dwProcessId;
		
		_GameServer_OnTime = time(NULL);
		return true;
	}

	return false;
}


bool CProcessAgent::Terminate_GameServer(void)
{
	if ( _hGameServer_Process == INVALID_HANDLE_VALUE )
		return false;

	DWORD ExitCode;
	if ( GetExitCodeProcess(_hGameServer_Process, &ExitCode) )
	{
		if ( ExitCode == STILL_ACTIVE )
		{
			TerminateProcess(_hGameServer_Process, 0);
		}
	}

	CloseHandle(_hGameServer_Process);
	_hGameServer_Process = INVALID_HANDLE_VALUE;
	_dwGameServer_ProcID = 0;
	
	return true;
}

///////////////////////////////////////////////////////////////
// 프로세스 실행중 확인
//
///////////////////////////////////////////////////////////////
bool CProcessAgent::ProcessCheck_GameServer(void)
{
	if ( _hGameServer_Process != INVALID_HANDLE_VALUE )
	{
		DWORD ExitCode;
		
		if ( GetExitCodeProcess(_hGameServer_Process, &ExitCode) )
		{
			if ( ExitCode == STILL_ACTIVE )
				return true;
			else
			{
				CloseHandle(_hGameServer_Process);
				_hGameServer_Process = INVALID_HANDLE_VALUE;
			}

		}
	}

	return false;
}
